<!DOCTYPE html>
<html lang="en">
	<head>
		<title>Star Background - three.js webgl - particles</title>
		
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		
		<style>
			body {
				margin: 0px;
				overflow: hidden;
			}
			
		</style>
	</head>
	<body>  
	
		<script src="myscripts/threejs/three.js"></script>
		<script src="myscripts/threejs/Detector.js"></script>

		
		<script>
			
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 1, 5000 );
			camera.position.y = 250;
			
			scene.add( new THREE.AmbientLight( 0xffffff ) );

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );

				var map = new THREE.TextureLoader().load( 'images/sunsurface.jpg' );
				map.wrapS = map.wrapT = THREE.RepeatWrapping;
				map.anisotropy = 16;
				var material = new THREE.MeshLambertMaterial( { map: map, side: THREE.DoubleSide } );


				sun = new THREE.Mesh( new THREE.SphereGeometry( 100, 500, 100 ), material );
				sun.position.set( 0, 0, 0 );
				scene.add( sun );
			
			//var sun = new THREE.Mesh( new THREE.SphereGeometry( 50, 500, 100 ), material );
			//var material = new THREE.MeshBasicMaterial( { color: 0xffff66 } );
			//var sun = new THREE.Mesh( geometry, material );
			//sun.position.set(0, 0, 0);
			//scene.add( sun );
			
			
			var geometry = new THREE.SphereGeometry(20, 300, 150 );
			var material2 = new THREE.MeshBasicMaterial( { color: 0xff0066 } );
			var saturn = new THREE.Mesh( geometry, material2 );
			saturn.position.set(-500, 0, 0);
			scene.add( saturn );
			
			

			var render = function () {
			
				//timer used for setting speed of camera rotation around origin
				var timer = Date.now() * 0.001
				
				//camera path around origin
				camera.position.x = Math.cos( timer ) * 800;
				camera.position.z = Math.sin( timer ) * 800;
				camera.lookAt( scene.position );

				//rotation on sphere's x-axis
				sun.rotation.x += 0.01;
				//cube.rotation.y += 0.00;
				
				//rotation on sphere's x-axis
				saturn.rotation.x += 0.05;

				requestAnimationFrame( render );
				renderer.render(scene, camera);
				
			};

			render();	
		</script>
	</body>
</html>