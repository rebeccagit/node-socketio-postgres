<!DOCTYPE html>
<html lang="en">
<head>
     <!-- The jQuery library is a prerequisite for all jqSuite products -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	
    <!-- We support more than 40 localizations -->
    <script src="myscripts/jgrid/js/i18n/grid.locale-en.js"></script>
	
    <!-- This is the Javascript file of jqGrid -->   
	<script src="myscripts/jgrid/js/jquery.jqGrid.min.js"></script>
	
    <!-- A link to a Boostrap  and jqGrid Bootstrap CSS siles-->

	<link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="myscripts/jgrid/css/ui.jqgrid-bootstrap.css" />
	
	<script>
		$.jgrid.defaults.width = 780;
		$.jgrid.defaults.responsive = true;
		$.jgrid.defaults.styleUI = 'Bootstrap';
	</script>
	<script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <meta charset="utf-8" />
    <title>jqGrid Loading Data - Three Level Hierarchy</title>
</head>
<body>
TEST
<div style="margin-left:20px">
    <table id="jqGrid"></table>
    <div id="jqGridPager"></div>
</div>
	<br /><br /><br /><br />

<div style="margin:25px;">
	<p>Additional Practice with preventdefault();</p>
	<form style="width:500px;height:50px;">
		<input type="text" name="name" />
		<input type="submit" />
	</form>
	<div id="wrapper">
		<div id="box" style="width:500px;height:50px;border:3px solid #000;"></div><br /><br />
		<div id="dragger" draggable="true" style="width:50px;height:20px;background-color:#f00;"></div>
	</div>
	<br /><br />
	<a href="https://yahoo.com">Yahoo</a>
	<br /><br />
	<textarea id="texta" style="width:500px;height:50px;"></textarea>
</div>

</body>

    <script type="text/javascript"> 
	//prevent default practice 
	function boxDrop(event) {
		this.appendChild(docment.querySelector('#dragger'));
	}
	
	function linkClick(event){
		event.preventDefault();
	}
	
	function boxClick(event) {
		console.log('box click');
	}
	
	function formSubmit(event){
		event.preventDefault();
	}
	
	function boxDrag(event){
		event.preventDefault();
	}
	
	function keyPress(event){
		if (event.which <48 || event.which >57) {
			//event.preventDefaut();
		}
	}
	
	document.querySelector('a').addEventListener('click',linkClick);
	document.getElementById('#texta').addEventListener('keydown',keyPress);
	document.querySelector('form').addEventListener('submit',formSubmit);
	document.getElementById('#box').addEventListener('dragover', boxDrag);
	document.getElementById('#box').addEventListener('drop', boxDrop);
	
	/*
    //jqgrid practice
        $(document).ready(function () {

            $("#jqGrid").jqGrid({
                url: '/myscripts/jgrid/js/data.json',
                mtype: "GET",
                datatype: "json",
                page: 1,
                colModel: [
                    { label: 'ID', name: 'CustomerID', key: true, width: 75 },
                    { label: 'Company Name', name: 'CompanyName', width: 150 },
                    { label: 'Contact Name', name: 'ContactName', width: 150 },
                    { label: 'Phone', name: 'Phone', width: 150 },
                    { label: 'City', name: 'City', width: 150 }
                ],
				loadonce: true,
                width: 780,
                height: 250,
                rowNum: 20,
                subGrid: true, // set the subGrid property to true to show expand buttons for each row
                subGridRowExpanded: showChildGrid, // javascript function that will take care of showing the child grid
                pager: "#jqGridPager"
            });
        });

        // the event handler on expanding parent row receives two parameters
        // the ID of the grid tow  and the primary key of the row
        function showChildGrid(parentRowID, parentRowKey) {
            var childGridID = parentRowID + "_table";
            var childGridPagerID = parentRowID + "_pager";

			
            // send the parent row primary key to the server so that we know which grid to show
            var childGridURL = parentRowKey+".json";

            // add a table and pager HTML elements to the parent grid row - we will render the child grid here
            $('#' + parentRowID).append('<table id=' + childGridID + '></table><div id=' + childGridPagerID + ' class=scroll></div>');

            $("#" + childGridID).jqGrid({
                url:		'/myscripts/jgrid/js/child3.json',
                mtype:		"GET",
                datatype: 	"json",
                page: 		1,
                colModel: 	[
							{ label: 'Order ID', name: 'OrderID', key: true, width: 75 },
							{ label: 'Required Date', name: 'RequiredDate', width: 100 },
							{ label: 'Ship Name', name: 'ShipName', width: 100 },
							{ label: 'Ship City', name: 'ShipCity', width: 100 },
							{ label: 'Freight', name: 'Freight', width: 75 }
							],
				loadonce: 	true,
                width: 		'700',
                height: 	'150',
                subGrid: 	true, // set the subGrid property to true to show expand buttons for each row
                subGridRowExpanded: showThirdLevelChildGrid, // javascript function that will take care of showing the child grid
                pager: 		"#" + childGridPagerID
            });

        }

        // the event handler on expanding parent row receives two parameters
        // the ID of the grid tow  and the primary key of the row
        function showThirdLevelChildGrid(parentRowID, parentRowKey) {
            var childGridID = parentRowID + "_table";
            var childGridPagerID = parentRowID + "_pager";

            // send the parent row primary key to the server so that we know which grid to show
            var childGridURL = '/myscripts/jgrid/js/child4.json';

            // add a table and pager HTML elements to the parent grid row - we will render the child grid here
            $('#' + parentRowID).append('<table id=' + childGridID + '></table><div id=' + childGridPagerID + ' class=scroll></div>');

            $("#" + childGridID).jqGrid({
                url: childGridURL,
                mtype: "GET",
                datatype: "json",
                colModel: [
                    { label: 'Order ID', name: 'OrderID', key: true, width: 75, hidden: true },
                    { label: 'Product ID', name: 'ProductID', width: 100 },
					{ label: 'Quantity', name: 'Quantity', width: 100 },
                    { label: 'Unit Price', name: 'UnitPrice', width: 100 },
					{ 
						label: 'Total', 
						name: 'Total', 
						width: 500, 
						sortable:false, 
						formatter: function( cellValue, options, row) {   // custom calculations at client side
							return parseFloat(row.Quantity)*parseFloat(row.UnitPrice);
						} 
					}
                ],
				loadonce: true,
                width: 'auto',
                height: '200',
                pager: "#" + childGridPagerID
            });

        }
	*/
    </script>

    

</html>